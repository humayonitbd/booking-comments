name: Ready the code and deploy

# on: [push, workflow_dispatch] 
on: 
  pull_request:
    types: opened
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
     build:
          runs-on: ubuntu-latest
          steps:
            - name: copying the codes
              uses: actions/checkout@v4

            - name: installing Node JS
              uses: actions/setup-node@v4

            - name: check the node version
              run: node -v

            - name: install dependencies
              run: npm install --frozen-lockfile

            - name: check the dependencies
              run: npm list

            - name: Build the Project
              run: npm run build

            # - name: Run the tests
            #   run: npm test
     deploy:
          runs-on: ubuntu-latest    
          needs: build
          steps:
            - uses: actions/checkout@v4

            - name: Install Node Js
              uses: actions/setup-node@v4

            - name: install dependencies
              run: npm install --frozen-lockfile

            - name: Build the Project
              run: npm run build   

            - name: Configure SSH
              env: 
                SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
              run: |
                mkdir -p ~/.ssh/
                echo "$EC2_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
            - name: Deploy the VPS Server
              env:
                  EC2_HOST: ${{ secrets.EC2_HOST }}
                  EC2_USER: ${{ secrets.EC2_USER }}
              run: |
                  # Create deployment directory
                  ssh $EC2_USER@$EC2_HOST "mkdir -p ~/app"

                  # Copy files to the deployment directory
                  rsync -avz \
                    --exclude='.git' \
                    --exclude='node_modules' \
                    --exclude='.github' \
                    . $EC2_USER@$EC2_HOST:~/app

                  # Install Production Dependencies on Ec2
                  ssh $EC2_USER@$EC2_HOST "cd ~/app && export PATH=$PATH:/run/user/1000/fnm_multishells/112424_1734077954807/bin && npm install --frozen-lockfile && npm run build"

                  # Stop existing PM2 process if it exists
                  ssh $EC2_USER@$EC2_HOST "cd ~/app && export PATH=$PATH:/run/user/1000/fnm_multishells/112424_1734077954807/bin && pm2 delete nodejs-app || true"

                  # Start the application with PM2
                  ssh $EC2_USER@$EC2_HOST "cd ~/app && export PATH=$PATH:/run/user/1000/fnm_multishells/112424_1734077954807/bin && cd ~/app && pm2 start dist/server.js --name nodejs-app"
   

